// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . 2 . 2 2 2 2 2 2 2 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.dungeon.chestOpen,myTiles.tile6,myTiles.tile3,myTiles.tile7], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`100010000e0f0f0f0f0f0f0f0f0f0f0f0f0f0f100c0703030303030303030303030308130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101011712180104130c02010101010101010113190c0104130c0201010101010101011514160104130c020101010101010101011a010104130c06050505050b010a050505050509130d121212121202010412121212121211`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundNorthEast1,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleSwitchUp,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.floorLight0,myTiles.tile8], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`100010000e0f0f0f0f0f0f1d0f0f0f0f0f0f0f100c07030303031c011b030303030308130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101010101010104130c0201010101010101011612170104130c02010101010101010113180c0104130c020101010101010101141a150104130c0201010101010101010119010104130c06050505050b010a050505050509130d121212121202010412121212121211`, img`
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . 2 2 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundNorthEast1,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.floorLight0,myTiles.tile8,sprites.dungeon.purpleSwitchDown,sprites.dungeon.darkGroundSouthWest1,sprites.dungeon.darkGroundSouthEast1,sprites.dungeon.doorOpenNorth], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`20000d`, img`
................................
................................
.....222222222222222222222......
.....2...................2......
.....2...................2......
.....2...................2......
.....2...2222222222222...2......
.....2...2...........2...2......
222222...2...........2...2......
.........2...........2...2......
.........2...........2...2......
.........2...........2...2......
2222222222...........2...2......
`, [myTiles.transparency16,sprites.castle.tileGrass1,myTiles.tile9,myTiles.tile10], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundEast,sprites.dungeon.purpleOuterWest2,sprites.dungeon.purpleOuterEast2,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterWest1,myTiles.tile5], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 . . . . . . 
. . . . . 2 . . . 2 2 2 2 2 2 2 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
22222222222222222222...2........
2......................2........
2......................2........
2......................2..22222.
2...22222222222222222222..2...2.
2...22222222222222222222222...2.
2.........................2...2.
2.........................2...2.
2.........................2...2.
2...2...2222222222222222222...2.
2...2...2222222222222222222...2.
2...2.........................2.
22222.........................2.
....2.........................2.
....222222222222222222...222222.
.....................2...2......
222222222222222......2...2......
2...2.........2......2...2......
2...2.........2......2...2......
2...2.........2......2...2......
2...2...2222222......2...2......
2...2...2............2...222222.
2...2...2............2........2.
2.......2............2........2.
2.......2............2........2.
2.......2............2...222222.
22222...2............2...2......
....2...22222222222222...2......
....2....................2......
....2....................2......
....2....................2......
....2222222222222222222222......
`, [myTiles.transparency16,sprites.castle.tileGrass1,myTiles.tile3,myTiles.tile4], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
2 . . . 2 2 2 2 2 2 2 2 2 2 2 . 
2 . . . 2 . . . . . . . . . 2 . 
2 . . . 2 . . . . . . . . . 2 . 
2 . . . 2 . . . . . . . . . 2 . 
2 . . . 2 . . . 2 2 2 2 2 2 2 . 
2 . . . 2 . . . 2 . . . . . . . 
2 . . . 2 . . . 2 . . . . . . . 
2 . . . . . . . 2 . . . . . . . 
2 . . . . . . . 2 . . . . . . . 
2 . . . . . . . 2 . . . . . . . 
2 2 2 2 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 2 2 2 2 2 2 2 
. . . . 2 . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass1,myTiles.tile2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "tile7":return tile7;
            case "tile8":return tile8;
            case "tile9":return tile9;
            case "tile10":return tile10;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
